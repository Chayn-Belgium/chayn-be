{"version":3,"sources":["webpack:///./src/components/sections/context/style.js","webpack:///./src/components/sections/context/Context.jsx","webpack:///./src/components/sections/workshops/style.js","webpack:///./src/components/sections/workshops/Workshops.jsx","webpack:///./src/components/sections/go-to-resources/style.js","webpack:///./src/components/sections/go-to-resources/GoToResources.jsx","webpack:///./src/pages/fr/projets/index.jsx"],"names":["Section","styled","section","ContentWrapper","div","MEDIA_QUERY","TABLET_AND_DOWN","Context","title","text","dangerouslySetInnerHTML","__html","Wrapper","ImageContainer","List","ul","ListItem","li","listIcon","ListSection","appendText","link","list","picture","subtitle","objectFit","level","size","map","item","index","key","is","Cta","label","GoToResources","as","footerData","data","footer","navData","nav","sectionsData","pages","find","name","sections","contextData","workshopsData","toResourcesData","getImageByName","pictures","edges","el","node","childImageSharp","originalName","ProjectPage","lang","backgroundColor","Workshops","imageName"],"mappings":"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","file":"component---src-pages-fr-projets-index-jsx-9ed67f8e41c2fedf2be0.js","sourcesContent":["import styled from \"styled-components\"\n\nimport { MEDIA_QUERY } from \"../../../utils/constants\"\n\nexport const Section = styled.section`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`\n\nexport const ContentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  margin: 100px auto;\n  position: relative;\n  text-align: center;\n  z-index: 1;\n\n  ${MEDIA_QUERY.TABLET_AND_DOWN} {\n    margin: 50px auto 0 auto;\n  }\n\n  > p {\n    max-width: 850px;\n    margin-bottom: 20px;\n  }\n`\n","import React from \"react\"\n\nimport { Section, ContentWrapper } from \"./style\"\nimport { Heading, P } from \"../../ui\"\nimport { Container } from \"../../../styles\"\n\nconst Context = ({ title, text }) => (\n  <Section>\n    <Container>\n      <ContentWrapper>\n        <Heading>{title}</Heading>\n        <P dangerouslySetInnerHTML={{ __html: text }} />\n      </ContentWrapper>\n    </Container>\n  </Section>\n)\n\nexport default Context\n","import styled from \"styled-components\"\n\nimport { MEDIA_QUERY } from \"../../../utils/constants\"\nimport listIcon from \"../../../assets/icons/dot.svg\"\n\nexport const Section = styled.section`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`\n\nexport const Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n\n  ${MEDIA_QUERY.TABLET_AND_DOWN} {\n    flex-direction: column;\n  }\n`\n\nexport const ImageContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 40%;\n  max-width: 400px;\n  z-index: 0;\n\n  ${MEDIA_QUERY.TABLET_AND_DOWN} {\n    width: 100%;\n    justify-content: center;\n  }\n\n  > img {\n    width: 100%;\n\n    ${MEDIA_QUERY.TABLET_AND_DOWN} {\n      max-width: 300px;\n    }\n  }\n`\n\nexport const ContentWrapper = styled.div`\n  align-items: flex-start;\n  display: flex;\n  flex-direction: column;\n  margin: 100px auto 100px auto;\n  position: relative;\n  padding-left: 50px;\n  max-width: 700px;\n\n  ${MEDIA_QUERY.TABLET_AND_DOWN} {\n    margin: 50px 0;\n    padding: 0;\n    align-items: center;\n  }\n\n  > p {\n    max-width: 850px;\n    margin-bottom: 20px;\n\n    ${MEDIA_QUERY.TABLET_AND_DOWN} {\n      text-align: center;\n    }\n  }\n\n  > a {\n    margin: 20px 0;\n  }\n`\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  width: 100%;\n`\n\nexport const ListItem = styled.li`\n  width: 100%;\n  position: relative;\n  padding-left: 20px;\n  margin-bottom: 10px;\n  max-width: 80%;\n\n  &:before {\n    content: \"\";\n    width: 4px;\n    height: 4px;\n    background-image: url(${listIcon});\n    position: absolute;\n    top: 8px;\n    left: 6px;\n    color: green;\n  }\n`\n","import React from \"react\"\n\nimport {\n  Section,\n  ImageContainer,\n  ContentWrapper,\n  Wrapper,\n  List,\n  ListItem,\n} from \"./style\"\nimport Cta from \"../../cta\"\nimport { P, Image, Button, Heading } from \"../../ui\"\nimport { Container } from \"../../../styles\"\n\nconst ListSection = ({\n  appendText,\n  link,\n  list,\n  picture,\n  subtitle,\n  text,\n  title,\n}) => (\n  <Section>\n    <Container>\n      <Wrapper>\n        <ImageContainer>\n          <Image picture={picture} objectFit=\"contain\" />\n        </ImageContainer>\n        <ContentWrapper>\n          <Heading level={2}>{title}</Heading>\n          <Heading level={3} size=\"m\">\n            {subtitle}\n          </Heading>\n          <P dangerouslySetInnerHTML={{ __html: text }} />\n          {list && (\n            <List>\n              {list.map((item, index) => (\n                <ListItem key={index}>\n                  <P size=\"s\" dangerouslySetInnerHTML={{ __html: item }} />\n                </ListItem>\n              ))}\n            </List>\n          )}\n          {link && (\n            <Button is={Cta} link={link}>\n              {link.label}\n            </Button>\n          )}\n          <P size=\"s\">{appendText}</P>\n        </ContentWrapper>\n      </Wrapper>\n    </Container>\n  </Section>\n)\n\nexport default ListSection\n","import styled from \"styled-components\"\n\nimport { MEDIA_QUERY } from \"../../../utils/constants\"\n\nexport const Section = styled.section`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`\n\nexport const ContentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  margin: 100px auto;\n  position: relative;\n  text-align: center;\n  z-index: 1;\n\n  ${MEDIA_QUERY.TABLET_AND_DOWN} {\n    margin: 50px auto;\n  }\n\n  > p {\n    max-width: 850px;\n    margin-bottom: 20px;\n  }\n`\n","import React from \"react\"\n\nimport { Section, ContentWrapper } from \"./style\"\nimport { P, Button } from \"../../ui\"\nimport { Container } from \"../../../styles\"\nimport Cta from \"../../cta\"\n\nconst GoToResources = ({ text, link }) => (\n  <Section>\n    <Container>\n      <ContentWrapper>\n        <P dangerouslySetInnerHTML={{ __html: text }} />\n        <Button as={Cta} link={link}>\n          {link.label}\n        </Button>\n      </ContentWrapper>\n    </Container>\n  </Section>\n)\n\nexport default GoToResources\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../../../components/layout\"\nimport data from \"../../../../site-data\"\nimport Context from \"../../../components/sections/context\"\nimport Workshops from \"../../../components/sections/workshops\"\nimport GoToResources from \"../../../components/sections/go-to-resources\"\nimport { PageSection, SectionContainer } from \"../../../styles\"\n\nconst CURRENT_LANG = \"fr\"\nconst footerData = data.footer[CURRENT_LANG]\nconst navData = data.nav[CURRENT_LANG]\nconst sectionsData = data.pages.find(({ name }) => name === \"project\").sections\nconst contextData = sectionsData[0]\nconst workshopsData = sectionsData[1]\nconst toResourcesData = sectionsData[2]\n\nexport const query = graphql`\n  query {\n    pictures: allFile(filter: { relativeDirectory: { eq: \"pages/projects\" } }) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(maxWidth: 600, quality: 90) {\n              ...GatsbyImageSharpFluid\n              originalName\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nconst getImageByName = (data, name) => {\n  const element = data.pictures.edges.find(\n    el => el.node.childImageSharp[\"fluid\" || \"fixed\"].originalName === name\n  )\n\n  return element.node.childImageSharp\n}\n\nconst ProjectPage = ({ data }) => (\n  <Layout lang={CURRENT_LANG} nav={navData} footer={footerData}>\n    <PageSection>\n      <SectionContainer>\n        <Context title={contextData.title} text={contextData.text} />\n      </SectionContainer>\n    </PageSection>\n    <PageSection backgroundColor=\"light\">\n      <SectionContainer>\n        <Workshops\n          picture={getImageByName(data, workshopsData.imageName)}\n          title={workshopsData.title}\n          text={workshopsData.text}\n          list={workshopsData.list}\n          appendText={workshopsData.appendText}\n        />\n      </SectionContainer>\n    </PageSection>\n    <PageSection>\n      <SectionContainer>\n        <GoToResources\n          text={toResourcesData.text}\n          link={toResourcesData.link}\n        />\n      </SectionContainer>\n    </PageSection>\n  </Layout>\n)\n\nexport default ProjectPage\n"],"sourceRoot":""}