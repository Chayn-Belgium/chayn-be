{"version":3,"sources":["webpack:///./src/pages/nl/bronnen/hoe-bouwt-u-een-zaak-tegen-huiselijk-geweld-zonder-advocaat/index.jsx"],"names":["ARTICLE_NAME","RESOURCE","BUILD_CASE_NO_LAWYER","footerData","data","footer","fr","navData","nav","ResourcesBuildCaseNoLawyerPage","hasChapter","resources","content","some","section","type","CONTENT_TYPE","CHAPTER","asideContent","undefined","forEach","push","title","id","useMemo","map","resource","index","props","key","data-section","chapterResource","chapterIndex","chapterType","chapterProps","getArticleSection","console","warn","imageData","lang","aside"],"mappings":"iPAaMA,EAAeC,WAASC,qBACxBC,EAAaC,IAAKC,OAAOC,GACzBC,EAAUH,IAAKI,IAAIF,GAwGVG,UA/EwB,SAAC,GAAc,IAAZL,EAAW,EAAXA,KAClCM,EAAaC,YAAUX,GAAV,GAAsCY,QAAQC,MAC/D,SAAAC,GAAO,OAAIA,EAAQC,OAASC,eAAaC,WAGrCC,EAAeR,EAAa,QAAKS,EACnCT,GACFC,YAAUX,GAAV,GAAsCY,QAAQQ,SAAQ,SAAAN,GAChDA,EAAQC,OAASC,eAAaC,SAClCC,EAAaG,KAAK,CAChBC,MAAOR,EAAQQ,MACfC,GAAIT,EAAQS,QAKlB,IAAMX,EAAUY,mBACd,kBACE,oCACGb,YAAUX,GAAV,GAAsCY,QAAQa,KAC7C,SAACC,EAAUC,GACT,IAAQZ,EAAmBW,EAAnBX,KAASa,EAAjB,YAA2BF,EAA3B,UAEA,GAAIX,IAASC,eAAaC,QACxB,OACE,kBAAC,IAAD,CACEM,GAAIK,EAAML,GACVD,MAAOM,EAAMN,MACbO,IAAKF,EACLG,eAAa,WAEZF,EAAMhB,QAAQa,KAAI,SAACM,EAAiBC,GACnC,IACQC,EAEJF,EAFFhB,KACGmB,EAFL,YAGIH,EAHJ,UAKMjB,EAAUqB,YAAkBF,EAAD,eAC/BJ,IAAQF,EAAL,IAAcK,GACdE,IAOL,OAJKpB,GACHsB,QAAQC,KAAK,mBAAoBJ,GAG5BnB,MAMf,IAAMA,EAAUqB,YAAkBpB,EAAD,eAC/Bc,IAAKF,EACLW,UAAWlC,GACRwB,IAOL,OAJKd,GACHsB,QAAQC,KAAK,mBAAoBtB,GAG5BD,QAKf,CAACV,IAGH,OACE,kBAAC,IAAD,CAAQmC,KAnGS,KAmGW/B,IAAKD,EAASF,OAAQF,GAChD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAeS,QAASA,EAAS4B,MAAOtB","file":"component---src-pages-nl-bronnen-hoe-bouwt-u-een-zaak-tegen-huiselijk-geweld-zonder-advocaat-index-jsx-e96323249625dc966ad4.js","sourcesContent":["import React, { useMemo } from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../../../../components/layout\"\nimport { ArticleChapter } from \"../../../../components/articles\"\nimport ContentLayout from \"../../../../components/content-layout\"\nimport data from \"../../../../../site-data\"\nimport { resources } from \"../../../../../site-data/resources\"\nimport { RESOURCE, CONTENT_TYPE } from \"../../../../../site-data/constants\"\nimport { Container } from \"../../../../styles\"\nimport { getArticleSection } from \"../../../../utils/helpers\"\n\nconst CURRENT_LANG = \"nl\"\nconst ARTICLE_NAME = RESOURCE.BUILD_CASE_NO_LAWYER\nconst footerData = data.footer.fr\nconst navData = data.nav.fr\n\nexport const query = graphql`\n  query {\n    resourceImages: allFile(\n      filter: {\n        relativeDirectory: {\n          eq: \"pages/resources/how-to-build-your-own-domestic-violence-case-without-a-lawyer\"\n        }\n      }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            fixed(width: 300, quality: 90) {\n              ...GatsbyImageSharpFixed\n              originalName\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nconst ResourcesBuildCaseNoLawyerPage = ({ data }) => {\n  const hasChapter = resources[ARTICLE_NAME][CURRENT_LANG].content.some(\n    section => section.type === CONTENT_TYPE.CHAPTER\n  )\n\n  const asideContent = hasChapter ? [] : undefined\n  if (hasChapter) {\n    resources[ARTICLE_NAME][CURRENT_LANG].content.forEach(section => {\n      if (section.type !== CONTENT_TYPE.CHAPTER) return\n      asideContent.push({\n        title: section.title,\n        id: section.id,\n      })\n    })\n  }\n\n  const content = useMemo(\n    () => (\n      <>\n        {resources[ARTICLE_NAME][CURRENT_LANG].content.map(\n          (resource, index) => {\n            const { type, ...props } = resource\n\n            if (type === CONTENT_TYPE.CHAPTER) {\n              return (\n                <ArticleChapter\n                  id={props.id}\n                  title={props.title}\n                  key={index}\n                  data-section=\"chapter\"\n                >\n                  {props.content.map((chapterResource, chapterIndex) => {\n                    const {\n                      type: chapterType,\n                      ...chapterProps\n                    } = chapterResource\n\n                    const section = getArticleSection(chapterType, {\n                      key: `${index}-${chapterIndex}`,\n                      ...chapterProps,\n                    })\n\n                    if (!section) {\n                      console.warn(\"Section missing:\", chapterType)\n                    }\n\n                    return section\n                  })}\n                </ArticleChapter>\n              )\n            }\n\n            const section = getArticleSection(type, {\n              key: index,\n              imageData: data,\n              ...props,\n            })\n\n            if (!section) {\n              console.warn(\"Section missing:\", type)\n            }\n\n            return section\n          }\n        )}\n      </>\n    ),\n    [data]\n  )\n\n  return (\n    <Layout lang={CURRENT_LANG} nav={navData} footer={footerData}>\n      <Container>\n        <ContentLayout content={content} aside={asideContent} />\n      </Container>\n    </Layout>\n  )\n}\n\nexport default ResourcesBuildCaseNoLawyerPage\n"],"sourceRoot":""}