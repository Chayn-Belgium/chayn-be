{"version":3,"sources":["webpack:///./src/components/sections/main-header/style.js","webpack:///./src/components/sections/main-header/MainHeader.jsx","webpack:///./src/components/sections/we-support-you-section/style.js","webpack:///./src/components/sections/we-support-you-section/WeSupportYouSection.jsx","webpack:///./src/components/sections/description-section/style.js","webpack:///./src/components/sections/description-section/DescriptionSection.jsx","webpack:///./src/pages/fr/index.jsx"],"names":["Section","styled","section","COLOR","WHITE_LINEN","Wrapper","div","MEDIA_QUERY","TABLET_AND_DOWN","ImageContainer","LeftContainer","MOBILE_AND_DOWN","MainHeader","picture","title","text","color","AMARANTH","ContentWrapper","WeSupportYouSection","level","size","dangerouslySetInnerHTML","__html","BITTERSWEET","List","ul","ListItem","li","listIcon","DescriptionSection","appendText","link","list","map","item","index","key","is","Cta","label","objectFit","footerData","data","footer","navData","nav","sectionsData","pages","find","name","sections","mainHeaderData","weSupportYouData","descriptionData","getImageByName","pictures","edges","el","node","childImageSharp","originalName","HomePage","lang","imageName","subtitle"],"mappings":"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","file":"component---src-pages-fr-index-jsx-9f5265366118d19c136d.js","sourcesContent":["import styled from \"styled-components\"\n\nimport { COLOR, MEDIA_QUERY } from \"../../../utils/constants\"\n\nexport const Section = styled.section`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  background-color: ${COLOR.WHITE_LINEN};\n  overflow: hidden;\n`\n\nexport const Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n\n  @media ${MEDIA_QUERY.TABLET_AND_DOWN} {\n    flex-direction: column;\n  }\n`\n\nexport const ImageContainer = styled.div`\n  width: 50%;\n  height: 500px;\n\n  @media ${MEDIA_QUERY.TABLET_AND_DOWN} {\n    width: 100%;\n    height: 300px;\n  }\n`\n\nexport const LeftContainer = styled.div`\n  width: 50%;\n\n  @media ${MEDIA_QUERY.TABLET_AND_DOWN} {\n    width: 100%;\n    padding: 50px 0 10px 0;\n  }\n\n  > h1 {\n    max-width: 320px;\n    text-transform: uppercase;\n\n    @media ${MEDIA_QUERY.MOBILE_AND_DOWN} {\n      text-align: center;\n      max-width: 100%;\n    }\n  }\n\n  > p {\n    max-width: 500px;\n\n    @media ${MEDIA_QUERY.MOBILE_AND_DOWN} {\n      text-align: center;\n    }\n  }\n`\n","import React from \"react\"\n\nimport { Section, ImageContainer, LeftContainer, Wrapper } from \"./style\"\nimport { Heading, P, Image } from \"../../ui\"\nimport { Container } from \"../../../styles\"\nimport { COLOR } from \"../../../utils/constants\"\n\nconst MainHeader = ({ picture, title, text }) => (\n  <Section>\n    <Container>\n      <Wrapper>\n        <LeftContainer>\n          <Heading color={COLOR.AMARANTH}>{title}</Heading>\n          <P>{text}</P>\n        </LeftContainer>\n        <ImageContainer>\n          <Image picture={picture} />\n        </ImageContainer>\n      </Wrapper>\n    </Container>\n  </Section>\n)\n\nexport default MainHeader\n","import styled from \"styled-components\"\n\nimport { MEDIA_QUERY } from \"../../../utils/constants\"\n\nexport const Section = styled.section`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`\n\nexport const ImageContainer = styled.div`\n  left: -60px;\n  position: absolute;\n  bottom: -100px;\n  width: 500px;\n  z-index: 0;\n\n  @media ${MEDIA_QUERY.TABLET_AND_DOWN} {\n    position: relative;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n  }\n`\n\nexport const ContentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  margin: 100px auto 150px auto;\n  position: relative;\n  text-align: center;\n  z-index: 1;\n\n  @media ${MEDIA_QUERY.TABLET_AND_DOWN} {\n    margin: 50px auto 0 auto;\n  }\n\n  > p {\n    max-width: 850px;\n    margin-bottom: 20px;\n  }\n`\n","import React from \"react\"\n\nimport { Section, ImageContainer, ContentWrapper } from \"./style\"\nimport { Heading, P, Image } from \"../../ui\"\nimport { Container } from \"../../../styles\"\n\nconst WeSupportYouSection = ({ title, text, picture }) => (\n  <Section>\n    <Container>\n      <ContentWrapper>\n        <Heading level={2} size=\"l\">\n          {title}\n        </Heading>\n        <P dangerouslySetInnerHTML={{ __html: text }} />\n      </ContentWrapper>\n      <ImageContainer>\n        <Image picture={picture} />\n      </ImageContainer>\n    </Container>\n  </Section>\n)\n\nexport default WeSupportYouSection\n","import styled from \"styled-components\"\n\nimport { COLOR, MEDIA_QUERY } from \"../../../utils/constants\"\nimport listIcon from \"../../../assets/icons/dot.svg\"\n\nexport const Section = styled.section`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  background-color: ${COLOR.BITTERSWEET};\n`\n\nexport const Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n\n  @media ${MEDIA_QUERY.TABLET_AND_DOWN} {\n    flex-direction: column;\n  }\n`\n\nexport const ImageContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 40%;\n  z-index: 0;\n\n  @media ${MEDIA_QUERY.TABLET_AND_DOWN} {\n    width: 100%;\n    justify-content: center;\n  }\n\n  > img {\n    width: 100%;\n\n    @media ${MEDIA_QUERY.TABLET_AND_DOWN} {\n      max-width: 300px;\n    }\n  }\n`\n\nexport const ContentWrapper = styled.div`\n  align-items: flex-start;\n  display: flex;\n  flex-direction: column;\n  margin: 100px auto 100px auto;\n  position: relative;\n  padding-right: 50px;\n\n  @media ${MEDIA_QUERY.TABLET_AND_DOWN} {\n    margin: 50px 0 0 0;\n    padding: 0;\n    align-items: center;\n  }\n\n  > p {\n    max-width: 850px;\n    margin-bottom: 20px;\n\n    @media ${MEDIA_QUERY.TABLET_AND_DOWN} {\n      text-align: center;\n    }\n  }\n\n  > a {\n    margin: 20px 0;\n  }\n`\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  width: 100%;\n`\n\nexport const ListItem = styled.li`\n  width: 100%;\n  position: relative;\n  padding-left: 20px;\n  margin-bottom: 10px;\n  max-width: 80%;\n\n  &:before {\n    content: \"\";\n    width: 4px;\n    height: 4px;\n    background-image: url(${listIcon});\n    position: absolute;\n    top: 8px;\n    left: 6px;\n    color: green;\n  }\n`\n","import React from \"react\"\n\nimport {\n  Section,\n  ImageContainer,\n  ContentWrapper,\n  Wrapper,\n  List,\n  ListItem,\n} from \"./style\"\nimport Cta from \"../../cta\"\nimport { P, Image, Button } from \"../../ui\"\nimport { Container } from \"../../../styles\"\n\nconst DescriptionSection = ({ appendText, link, list, picture, text }) => (\n  <Section>\n    <Container>\n      <Wrapper>\n        <ContentWrapper>\n          <P dangerouslySetInnerHTML={{ __html: text }} />\n          {list && (\n            <List>\n              {list.map((item, index) => (\n                <ListItem key={index}>\n                  <P size=\"s\" dangerouslySetInnerHTML={{ __html: item }} />\n                </ListItem>\n              ))}\n            </List>\n          )}\n          {link && (\n            <Button is={Cta} link={link}>\n              {link.label}\n            </Button>\n          )}\n          <P size=\"s\">{appendText}</P>\n        </ContentWrapper>\n        <ImageContainer>\n          <Image picture={picture} objectFit=\"contain\" />\n        </ImageContainer>\n      </Wrapper>\n    </Container>\n  </Section>\n)\n\nexport default DescriptionSection\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../../components/layout\"\nimport data from \"../../../site-data\"\nimport MainHeader from \"../../components/sections/main-header\"\nimport WeSupportYouSection from \"../../components/sections/we-support-you-section\"\nimport DescriptionSection from \"../../components/sections/description-section\"\n\nconst CURRENT_LANG = \"fr\"\nconst footerData = data.footer[CURRENT_LANG]\nconst navData = data.nav[CURRENT_LANG]\nconst sectionsData = data.pages.find(({ name }) => name === \"index\").sections\nconst mainHeaderData = sectionsData[0]\nconst weSupportYouData = sectionsData[1]\nconst descriptionData = sectionsData[2]\n\nexport const query = graphql`\n  query {\n    pictures: allFile(filter: { relativeDirectory: { eq: \"pages/home\" } }) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(maxWidth: 600, quality: 90) {\n              ...GatsbyImageSharpFluid\n              originalName\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nconst getImageByName = (data, name) => {\n  const element = data.pictures.edges.find(\n    el =>\n      el.node.childImageSharp &&\n      el.node.childImageSharp[\"fluid\" || \"fixed\"].originalName === name\n  )\n\n  return element.node.childImageSharp\n}\n\nconst HomePage = ({ data }) => (\n  <Layout lang={CURRENT_LANG} nav={navData} footer={footerData}>\n    <MainHeader\n      picture={getImageByName(data, mainHeaderData.imageName)}\n      title={mainHeaderData.title}\n      text={mainHeaderData.text}\n    />\n    <WeSupportYouSection\n      picture={getImageByName(data, weSupportYouData.imageName)}\n      title={weSupportYouData.title}\n      text={weSupportYouData.text}\n    />\n    <DescriptionSection\n      picture={`pages/home/${descriptionData.imageName}`}\n      appendText={descriptionData.appendText}\n      text={descriptionData.text}\n      link={descriptionData.link}\n      title={descriptionData.title}\n      subtitle={descriptionData.subtitle}\n      list={descriptionData.list}\n    />\n  </Layout>\n)\n\nexport default HomePage\n"],"sourceRoot":""}